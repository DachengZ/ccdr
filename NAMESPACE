# Generated by roxygen2 (4.1.0): do not edit by hand

S3method(as.SparseBlockMatrixR,matrix)
S3method(as.SparseBlockMatrixR,sparse)
S3method(as.list,SparseBlockMatrixR)
S3method(as.list,ccdrFit)
S3method(as.matrix,SparseBlockMatrixR)
S3method(get.adjacency.matrix,SparseBlockMatrixR)
S3method(get.adjacency.matrix,ccdrFit)
S3method(get.adjacency.matrix,ccdrPath)
S3method(get.adjacency.matrix,edgeList)
S3method(is.zero,SparseBlockMatrixR)
S3method(is.zero,edgeList)
S3method(lambda.grid,ccdrPath)
S3method(num.edges,SparseBlockMatrixR)
S3method(num.edges,ccdrFit)
S3method(num.edges,ccdrPath)
S3method(num.edges,edgeList)
S3method(num.nodes,SparseBlockMatrixR)
S3method(num.nodes,ccdrFit)
S3method(num.nodes,ccdrPath)
S3method(num.nodes,edgeList)
S3method(num.samples,ccdrFit)
S3method(num.samples,ccdrPath)
S3method(print,ccdrFit)
S3method(print,ccdrPath)
S3method(print,edgeList)
export(as.edgeList.SparseBlockMatrixR)
export(ccdr.run)
export(edgeList.list)
export(generate.lambdas)
export(get.adjacency.matrix)
export(is.SparseBlockMatrixR)
export(is.ccdrFit)
export(is.ccdrPath)
export(is.edgeList)
export(is.zero)
export(lambda.grid)
export(num.edges)
export(num.nodes)
export(num.samples)
importFrom(Rcpp,sourceCpp)
useDynLib(ccdr)
